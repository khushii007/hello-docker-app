---
- name: Setup DevOps VM with Docker, Jenkins, Minikube, Helm, and kubectl
  hosts: devops
  become: yes
  vars:
    docker_users:
      - "{{ ansible_user }}"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install essential dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - conntrack
        state: present

    # ---------------- Docker Setup ----------------
    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'

    - name: Add Docker apt repository
      apt_repository:
        repo: >-
          deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present
        filename: docker

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Add user to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ docker_users }}"

    # ---------------- Java and Jenkins Setup ----------------
    - name: Install OpenJDK 17
      apt:
        name: openjdk-17-jdk
        state: present

    - name: Download Jenkins GPG key and save to keyring
      get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.gpg
        mode: '0644'

    - name: Add Jenkins repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.gpg] https://pkg.jenkins.io/debian-stable binary/"
        filename: jenkins
        state: present

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Ensure Jenkins is running
      service:
        name: jenkins
        state: started
        enabled: yes

    # ---------------- kubectl setup (Binary) ----------------
    - name: Download kubectl binary
      get_url:
        url: https://dl.k8s.io/release/v1.30.1/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'

    - name: Verify kubectl installation
      command: kubectl version --client
      register: kubectl_version
      changed_when: false

    # ---------------- Minikube Setup ----------------
    - name: Download Minikube
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: /usr/local/bin/minikube
        mode: '0755'

    # ---------------- Helm Setup ----------------
    - name: Download Helm archive
      get_url:
        url: https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
        dest: /tmp/helm.tar.gz
        mode: '0644'

    - name: Extract Helm
      unarchive:
        src: /tmp/helm.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Move Helm binary
      copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin/helm
        mode: '0755'

    - name: Cleanup Helm install files
      file:
        path: /tmp/helm.tar.gz
        state: absent
